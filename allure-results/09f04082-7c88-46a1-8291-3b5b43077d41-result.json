{"name": "Создание заказа с невалидными ID ингредиентов", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус 400, получен 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "self = <test_orders.TestOrders object at 0x000002085B004D60>\nauthorized_user = {'access_token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjA1M2UyOWVkMjgwMDAxYjYzYjNhYSIsImlhdCI6MTc1...email': 'test_xcolqpeg_1751143388193@example.com', 'name': 'TestUser_RPSECS_1751143388193', 'password': 'password123'}}\n\n    @allure.feature(\"Создание заказа\")\n    @allure.story(\"Создание заказа с неверными хешами ингредиентов\")\n    @allure.title(\"Создание заказа с невалидными ID ингредиентов\")\n    def test_create_order_with_invalid_ingredients(self, authorized_user):\n        \"\"\"Тест создания заказа с неверными хешами ингредиентов\"\"\"\n        api_client = authorized_user[\"api_client\"]\n    \n        with allure.step(\"Отправка запроса на создание заказа с неверными хешами\"):\n            response = api_client.create_order(INVALID_ORDER_DATA_WRONG_HASH)\n    \n        with allure.step(\"Проверка статус кода\"):\n>           assert response.status_code == Config.STATUS_CODES[\"bad_request\"], \\\n                f\"Ожидался статус {Config.STATUS_CODES['bad_request']}, получен {response.status_code}\"\nE           AssertionError: Ожидался статус 400, получен 500\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests\\test_orders.py:101: AssertionError"}, "description": "Тест создания заказа с неверными хешами ингредиентов", "steps": [{"name": "Отправка запроса на создание заказа с неверными хешами", "status": "passed", "start": 1751143389030, "stop": 1751143389097}, {"name": "Проверка статус кода", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус 400, получен 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code\n", "trace": "  File \"C:\\Users\\anast\\OneDrive\\Рабочий стол\\Diplom_2\\tests\\test_orders.py\", line 101, in test_create_order_with_invalid_ingredients\n    assert response.status_code == Config.STATUS_CODES[\"bad_request\"], \\\n        f\"Ожидался статус {Config.STATUS_CODES['bad_request']}, получен {response.status_code}\"\n"}, "start": 1751143389097, "stop": 1751143389097}], "start": 1751143389029, "stop": 1751143389100, "uuid": "ba1aa928-d30f-4467-8f8c-c756cf5131a0", "historyId": "63d5b4556a1592d811183977c81af6a4", "testCaseId": "63d5b4556a1592d811183977c81af6a4", "fullName": "tests.test_orders.TestOrders#test_create_order_with_invalid_ingredients", "labels": [{"name": "feature", "value": "Создание заказа"}, {"name": "epic", "value": "Заказы"}, {"name": "story", "value": "Создание заказа с неверными хешами ингредиентов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_orders"}, {"name": "subSuite", "value": "TestOrders"}, {"name": "host", "value": "SantoSt"}, {"name": "thread", "value": "11912-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_orders"}]}